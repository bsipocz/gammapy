#
# This travis-ci build matrix config is a modified copy of the one from Astropy
#


# We can't use `language: python` here because it's not supported on Mac.
# But that's OK ... the language here is irrelevant because we use conda
# to install our own Python.
language: c

os:
    - linux

# This is a signal to travis-ci to use the new build infrastructure
sudo: false

addons:
  apt:
    packages: &default_apt
      - graphviz
      - texlive-latex-extra
      - dvipng
      - gfortran

env:
    global:
        - NUMPY_VERSION=1.10
        - ASTROPY_VERSION=1.1
        - LIBGFORTRAN_VERSION=1.0
        - CONDA_DEPENDENCIES='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes sherpa libgfortran=$LIBGFORTRAN_VERSION'
        - CONDA_DEPENDENCIES_OSX='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes sherpa'
        - CONDA_DEPENDENCIES_WO_SHERPA='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes'
        - CONDA_DOCS_DEPENDENCIES='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes pygments aplpy sherpa libgfortran=$LIBGFORTRAN_VERSION'
        - CONDA_DOCS_DEPENDENCIES_WO_SHERPA='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes pygments aplpy'
        - CONDA_DEPENDENCIES_NOTEBOOKS='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes aplpy sherpa libgfortran=$LIBGFORTRAN_VERSION runipy'
        - CONDA_DEPENDENCIES_NOTEBOOKS_WO_SHERPA='Cython click scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas naima photutils wcsaxes aplpy libgfortran=$LIBGFORTRAN_VERSION runipy'
        - PIP_DEPENDENCIES='regions uncertainties reproject'
        - CONDA_CHANNELS='astropy sherpa'
        - FETCH_GAMMAPY_EXTRA=true
        - MAIN_CMD='python setup.py'

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Run tests
        # Coverage is measured on Python 2 (where Sherpa is available)
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test -V --coverage'
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test -V --coverage'


install:
    - git clone -b rm-fixed-cov git://github.com/pllim/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    - if $FETCH_GAMMAPY_EXTRA; then
          git clone https://github.com/gammapy/gammapy-extra.git $HOME/gammapy-extra;
          export GAMMAPY_EXTRA=${HOME}/gammapy-extra;
      fi

    # This is needed to make matplotlib plot testing work
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
          export DISPLAY=:99.0;
          sh -e /etc/init.d/xvfb start;
          export QT_API=pyqt;
      fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test -V --coverage' ]]; then
          coveralls --rcfile='gammapy/tests/coveragerc';
      fi
